// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"smux/config"
	"smux/di/container"
	"smux/internals/application/app"
	"smux/internals/application/controllers/blog"
	"smux/internals/application/server"
	"smux/internals/data/datasources"
	"smux/internals/data/repositories_impl"
	"smux/internals/domain/types"
	"smux/internals/domain/usecases"
)

// Injectors from wire.go:

func InitializeControllerRegistry() (*container.ControllerRegistry, error) {
	testDataSource, err := datasources.Init()
	if err != nil {
		return nil, err
	}
	blogRepositoryImpl := repositories_impl.NewBlogRepositoryImpl(testDataSource)
	blogUseCase := usecases.NewBlogUseCase(blogRepositoryImpl)
	blogController := blog.NewBlogController(blogUseCase)
	controllerRegistry := container.NewControllerRegistry(blogController)
	return controllerRegistry, nil
}

func InitServer(controllerRegistry *container.ControllerRegistry, configVars *config.ConfigVars, version string) (*types.Server, error) {
	appApp := app.NewApp(controllerRegistry, configVars, version)
	typesServer, err := server.NewServer(appApp)
	if err != nil {
		return nil, err
	}
	return typesServer, nil
}
